{"ast":null,"code":"var _jsxFileName = \"/Users/youuu/Desktop/cis512_react/src/newPaint.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPaint = () => {\n  _s();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [color, setColor] = useState('#000000');\n  const [isErasing, setIsErasing] = useState(false);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight - 100;\n  }, []);\n  const getCoordinates = event => {\n    if (event.touches && event.touches.length > 0) {\n      const {\n        clientX,\n        clientY\n      } = event.touches[0];\n      const rect = canvasRef.current.getBoundingClientRect();\n      return {\n        offsetX: clientX - rect.left,\n        offsetY: clientY - rect.top\n      };\n    } else {\n      const {\n        offsetX,\n        offsetY\n      } = event.nativeEvent;\n      return {\n        offsetX,\n        offsetY\n      };\n    }\n  };\n  const startDrawing = event => {\n    const {\n      offsetX,\n      offsetY\n    } = getCoordinates(event);\n    const ctx = canvasRef.current.getContext('2d');\n    setIsDrawing(true);\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n  };\n  const draw = event => {\n    if (!isDrawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = getCoordinates(event);\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = isErasing ? 'white' : color;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: color,\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"50\",\n        value: lineWidth,\n        onChange: e => setLineWidth(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsErasing(!isErasing),\n        children: isErasing ? 'Paint Mode' : 'Erase Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        children: \"Clear Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"canvas-element\",\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseOut: stopDrawing,\n      onTouchStart: startDrawing,\n      onTouchMove: draw,\n      onTouchEnd: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPaint, \"T/cWmTK3qhLxDuprAvX+WDDu8xI=\");\n_c = NewPaint;\nexport default NewPaint;\nvar _c;\n$RefreshReg$(_c, \"NewPaint\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","NewPaint","_s","isDrawing","setIsDrawing","lineWidth","setLineWidth","color","setColor","isErasing","setIsErasing","canvasRef","canvas","current","ctx","getContext","lineJoin","lineCap","width","window","innerWidth","height","innerHeight","getCoordinates","event","touches","length","clientX","clientY","rect","getBoundingClientRect","offsetX","left","offsetY","top","nativeEvent","startDrawing","beginPath","moveTo","draw","strokeStyle","lineTo","stroke","stopDrawing","clearCanvas","clearRect","children","className","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","min","max","onClick","ref","id","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","_c","$RefreshReg$"],"sources":["/Users/youuu/Desktop/cis512_react/src/newPaint.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './style.css';\n\nconst NewPaint = () => {\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [color, setColor] = useState('#000000');\n  const [isErasing, setIsErasing] = useState(false);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight - 100;\n  }, []);\n\n  const getCoordinates = (event) => {\n    if (event.touches && event.touches.length > 0) {\n      const { clientX, clientY } = event.touches[0];\n      const rect = canvasRef.current.getBoundingClientRect();\n      return {\n        offsetX: clientX - rect.left,\n        offsetY: clientY - rect.top,\n      };\n    } else {\n      const { offsetX, offsetY } = event.nativeEvent;\n      return { offsetX, offsetY };\n    }\n  };\n\n  const startDrawing = (event) => {\n    const { offsetX, offsetY } = getCoordinates(event);\n    const ctx = canvasRef.current.getContext('2d');\n    setIsDrawing(true);\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n  };\n\n  const draw = (event) => {\n    if (!isDrawing) return;\n    const { offsetX, offsetY } = getCoordinates(event);\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = isErasing ? 'white' : color;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  return (\n    <div>\n      <div className=\"control-panel\">\n        <input type=\"color\" value={color} onChange={(e) => setColor(e.target.value)} />\n        <input type=\"range\" min=\"1\" max=\"50\" value={lineWidth} onChange={(e) => setLineWidth(e.target.value)} />\n        <button onClick={() => setIsErasing(!isErasing)}>{isErasing ? 'Paint Mode' : 'Erase Mode'}</button>\n        <button onClick={clearCanvas}>Clear Canvas</button>\n      </div>\n      <canvas\n        ref={canvasRef}\n        id=\"canvas-element\"\n        onMouseDown={startDrawing}\n        onMouseMove={draw}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n        onTouchStart={startDrawing}\n        onTouchMove={draw}\n        onTouchEnd={stopDrawing}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default NewPaint;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,SAAS,CAAC;EAC7C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,MAAMc,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACE,QAAQ,GAAG,OAAO;IACtBF,GAAG,CAACG,OAAO,GAAG,OAAO;IACrBL,MAAM,CAACM,KAAK,GAAGC,MAAM,CAACC,UAAU;IAChCR,MAAM,CAACS,MAAM,GAAGF,MAAM,CAACG,WAAW,GAAG,GAAG;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7C,MAAM;QAAEC,OAAO;QAAEC;MAAQ,CAAC,GAAGJ,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;MAC7C,MAAMI,IAAI,GAAGlB,SAAS,CAACE,OAAO,CAACiB,qBAAqB,CAAC,CAAC;MACtD,OAAO;QACLC,OAAO,EAAEJ,OAAO,GAAGE,IAAI,CAACG,IAAI;QAC5BC,OAAO,EAAEL,OAAO,GAAGC,IAAI,CAACK;MAC1B,CAAC;IACH,CAAC,MAAM;MACL,MAAM;QAAEH,OAAO;QAAEE;MAAQ,CAAC,GAAGT,KAAK,CAACW,WAAW;MAC9C,OAAO;QAAEJ,OAAO;QAAEE;MAAQ,CAAC;IAC7B;EACF,CAAC;EAED,MAAMG,YAAY,GAAIZ,KAAK,IAAK;IAC9B,MAAM;MAAEO,OAAO;MAAEE;IAAQ,CAAC,GAAGV,cAAc,CAACC,KAAK,CAAC;IAClD,MAAMV,GAAG,GAAGH,SAAS,CAACE,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;IAC9CX,YAAY,CAAC,IAAI,CAAC;IAClBU,GAAG,CAACuB,SAAS,CAAC,CAAC;IACfvB,GAAG,CAACwB,MAAM,CAACP,OAAO,EAAEE,OAAO,CAAC;EAC9B,CAAC;EAED,MAAMM,IAAI,GAAIf,KAAK,IAAK;IACtB,IAAI,CAACrB,SAAS,EAAE;IAChB,MAAM;MAAE4B,OAAO;MAAEE;IAAQ,CAAC,GAAGV,cAAc,CAACC,KAAK,CAAC;IAClD,MAAMV,GAAG,GAAGH,SAAS,CAACE,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;IAC9CD,GAAG,CAACT,SAAS,GAAGA,SAAS;IACzBS,GAAG,CAAC0B,WAAW,GAAG/B,SAAS,GAAG,OAAO,GAAGF,KAAK;IAC7CO,GAAG,CAAC2B,MAAM,CAACV,OAAO,EAAEE,OAAO,CAAC;IAC5BnB,GAAG,CAAC4B,MAAM,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBvC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMwC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMhC,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAAC+B,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEjC,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACS,MAAM,CAAC;EAClD,CAAC;EAED,oBACErB,OAAA;IAAA8C,QAAA,gBACE9C,OAAA;MAAK+C,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5B9C,OAAA;QAAOgD,IAAI,EAAC,OAAO;QAACC,KAAK,EAAE1C,KAAM;QAAC2C,QAAQ,EAAGC,CAAC,IAAK3C,QAAQ,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/ExD,OAAA;QAAOgD,IAAI,EAAC,OAAO;QAACS,GAAG,EAAC,GAAG;QAACC,GAAG,EAAC,IAAI;QAACT,KAAK,EAAE5C,SAAU;QAAC6C,QAAQ,EAAGC,CAAC,IAAK7C,YAAY,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxGxD,OAAA;QAAQ2D,OAAO,EAAEA,CAAA,KAAMjD,YAAY,CAAC,CAACD,SAAS,CAAE;QAAAqC,QAAA,EAAErC,SAAS,GAAG,YAAY,GAAG;MAAY;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACnGxD,OAAA;QAAQ2D,OAAO,EAAEf,WAAY;QAAAE,QAAA,EAAC;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACNxD,OAAA;MACE4D,GAAG,EAAEjD,SAAU;MACfkD,EAAE,EAAC,gBAAgB;MACnBC,WAAW,EAAE1B,YAAa;MAC1B2B,WAAW,EAAExB,IAAK;MAClByB,SAAS,EAAErB,WAAY;MACvBsB,UAAU,EAAEtB,WAAY;MACxBuB,YAAY,EAAE9B,YAAa;MAC3B+B,WAAW,EAAE5B,IAAK;MAClB6B,UAAU,EAAEzB;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACtD,EAAA,CA/EID,QAAQ;AAAAoE,EAAA,GAARpE,QAAQ;AAiFd,eAAeA,QAAQ;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}